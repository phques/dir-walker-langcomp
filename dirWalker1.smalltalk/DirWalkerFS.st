"version using FileSystem, FileReference & cie, ie- Pharo2 - Pharo3"Object subclass: #DirWalker	instanceVariableNames: 'path filenames children'	classVariableNames: ''	poolDictionaries: ''	category: 'DirWalker'!!DirWalker commentStamp: 'PhilippeQuesnel 3/5/2014 20:10' prior: 0!a DirWalkerNode represents a directory entry in a tree structure It reads a directory tree in memory.It offers a walk method to traverse the tree!!DirWalker methodsFor: 'private tree building' stamp: 'PhilippeQuesnel 3/5/2014 23:36'!readAt: dirFileRef	"reads directory, recursing into child dirs"	path := dirFileRef path.	filenames := dirFileRef fileNames.	children := dirFileRef directories collect: [ :kidDirRef | self class new readAt: kidDirRef ]! !!DirWalker methodsFor: 'navigating' stamp: 'PhilippeQuesnel 3/6/2014 23:23'!walkWith: visitor	visitor enterDirectory: self basename.	children do: [ :kid | kid walkWith: visitor ].	filenames do: [ :filename | visitor processFile: filename ].	visitor exitDirectory: self basename! !!DirWalker methodsFor: 'accessing' stamp: 'PhilippeQuesnel 3/5/2014 21:09'!basename	"returns the basename for this directory"	^ path basename! !!DirWalker methodsFor: 'private tree building' stamp: 'PhilippeQuesnel 3/5/2014 23:36'!readAt: dirFileRef	"reads directory, recursing into child dirs"	path := dirFileRef path.	filenames := dirFileRef fileNames.	children := dirFileRef directories collect: [ :kidDirRef | self class new readAt: kidDirRef ]! !!DirWalker methodsFor: 'navigating' stamp: 'PhilippeQuesnel 3/6/2014 23:23'!walkWith: visitor	visitor enterDirectory: self basename.	children do: [ :kid | kid walkWith: visitor ].	filenames do: [ :filename | visitor processFile: filename ].	visitor exitDirectory: self basename! !!DirWalker methodsFor: 'accessing' stamp: 'PhilippeQuesnel 3/5/2014 21:09'!basename	"returns the basename for this directory"	^ path basename! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DirWalker class	instanceVariableNames: ''!!DirWalker class commentStamp: '<historical>' prior: 0!!!DirWalker class methodsFor: 'instance creation' stamp: 'PhilippeQuesnel 3/8/2014 00:36'!new: stringPath	""	| dirFileRef |	dirFileRef := stringPath asFileReference.	dirFileRef isDirectory ifFalse: [ self error: 'Not a directory: ', stringPath ].		^ self new readAt: dirFileRef.	! !!DirWalker class methodsFor: 'instance creation' stamp: 'PhilippeQuesnel 3/8/2014 00:36'!new: stringPath	""	| dirFileRef |	dirFileRef := stringPath asFileReference.	dirFileRef isDirectory ifFalse: [ self error: 'Not a directory: ', stringPath ].		^ self new readAt: dirFileRef.	! !Object subclass: #IDirWalkerVisitor	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'DirWalker'!!IDirWalkerVisitor commentStamp: 'PhilippeQuesnel 3/6/2014 23:47' prior: 0!An IDirWalkerVisistor is the visitor 'interface' for the walk method of DirWalker!!IDirWalkerVisitor methodsFor: 'abstract - navigation' stamp: 'PhilippeQuesnel 3/6/2014 22:55'!enterDirectory: name	^ self subclassResponsibility.! !!IDirWalkerVisitor methodsFor: 'abstract - navigation' stamp: 'PhilippeQuesnel 3/6/2014 22:56'!exitDirectory: name	^ self subclassResponsibility.! !!IDirWalkerVisitor methodsFor: 'abstract - navigation' stamp: 'PhilippeQuesnel 3/6/2014 22:56'!processFile: name	^ self subclassResponsibility.! !!IDirWalkerVisitor methodsFor: 'abstract - navigation' stamp: 'PhilippeQuesnel 3/6/2014 22:55'!enterDirectory: name	^ self subclassResponsibility.! !!IDirWalkerVisitor methodsFor: 'abstract - navigation' stamp: 'PhilippeQuesnel 3/6/2014 22:56'!exitDirectory: name	^ self subclassResponsibility.! !!IDirWalkerVisitor methodsFor: 'abstract - navigation' stamp: 'PhilippeQuesnel 3/6/2014 22:56'!processFile: name	^ self subclassResponsibility.! !IDirWalkerVisitor subclass: #DirWalkIndentedVisitor	instanceVariableNames: 'level stream'	classVariableNames: ''	poolDictionaries: ''	category: 'DirWalker'!!DirWalkIndentedVisitor commentStamp: 'PhilippeQuesnel 3/7/2014 19:48' prior: 0!A DirWalkIndentedVisitor is an abstract class visitor for DirWalker that implements basic indented output, subclasses must implement outputDirectory and outputFile.!!DirWalkIndentedVisitor methodsFor: 'initialization' stamp: 'PhilippeQuesnel 3/7/2014 19:29'!initialize	super initialize.	level := 0.! !!DirWalkIndentedVisitor methodsFor: 'accessing' stamp: 'PhilippeQuesnel 3/7/2014 12:39'!stream: aStream	stream := aStream! !!DirWalkIndentedVisitor methodsFor: 'accessing' stamp: 'PhilippeQuesnel 3/7/2014 12:20'!stream	^ stream! !!DirWalkIndentedVisitor methodsFor: 'navigation' stamp: 'PhilippeQuesnel 3/7/2014 12:23'!processFile: name	self indent.	self outputFile: name.! !!DirWalkIndentedVisitor methodsFor: 'navigation' stamp: 'PhilippeQuesnel 3/7/2014 20:31'!enterDirectory: name	self indent.	self outputDirIn: name.	level := level + 1! !!DirWalkIndentedVisitor methodsFor: 'navigation' stamp: 'PhilippeQuesnel 3/7/2014 20:46'!exitDirectory: name	level := level - 1.	self indent.	self outputDirOut: name.	level = 0 ifTrue: [ stream flush ]! !!DirWalkIndentedVisitor methodsFor: 'private - utilities' stamp: 'PhilippeQuesnel 3/6/2014 23:24'!spaces	^ String new padRightTo: (level * 3).! !!DirWalkIndentedVisitor methodsFor: 'private - utilities' stamp: 'PhilippeQuesnel 3/7/2014 12:02'!indent	stream nextPutAll: self spaces.! !!DirWalkIndentedVisitor methodsFor: 'abstract - output' stamp: 'PhilippeQuesnel 3/7/2014 20:33'!outputDirOut: name	self subclassResponsibility ! !!DirWalkIndentedVisitor methodsFor: 'abstract - output' stamp: 'PhilippeQuesnel 3/7/2014 20:31'!outputDirIn: name	self subclassResponsibility ! !!DirWalkIndentedVisitor methodsFor: 'abstract - output' stamp: 'PhilippeQuesnel 3/7/2014 11:51'!outputFile: name	self subclassResponsibility ! !!DirWalkIndentedVisitor methodsFor: 'initialization' stamp: 'PhilippeQuesnel 3/7/2014 19:29'!initialize	super initialize.	level := 0.! !!DirWalkIndentedVisitor methodsFor: 'accessing' stamp: 'PhilippeQuesnel 3/7/2014 12:39'!stream: aStream	stream := aStream! !!DirWalkIndentedVisitor methodsFor: 'accessing' stamp: 'PhilippeQuesnel 3/7/2014 12:20'!stream	^ stream! !!DirWalkIndentedVisitor methodsFor: 'navigation' stamp: 'PhilippeQuesnel 3/7/2014 12:23'!processFile: name	self indent.	self outputFile: name.! !!DirWalkIndentedVisitor methodsFor: 'navigation' stamp: 'PhilippeQuesnel 3/7/2014 20:31'!enterDirectory: name	self indent.	self outputDirIn: name.	level := level + 1! !!DirWalkIndentedVisitor methodsFor: 'navigation' stamp: 'PhilippeQuesnel 3/7/2014 20:46'!exitDirectory: name	level := level - 1.	self indent.	self outputDirOut: name.	level = 0 ifTrue: [ stream flush ]! !!DirWalkIndentedVisitor methodsFor: 'private - utilities' stamp: 'PhilippeQuesnel 3/6/2014 23:24'!spaces	^ String new padRightTo: (level * 3).! !!DirWalkIndentedVisitor methodsFor: 'private - utilities' stamp: 'PhilippeQuesnel 3/7/2014 12:02'!indent	stream nextPutAll: self spaces.! !!DirWalkIndentedVisitor methodsFor: 'abstract - output' stamp: 'PhilippeQuesnel 3/7/2014 20:33'!outputDirOut: name	self subclassResponsibility ! !!DirWalkIndentedVisitor methodsFor: 'abstract - output' stamp: 'PhilippeQuesnel 3/7/2014 20:31'!outputDirIn: name	self subclassResponsibility ! !!DirWalkIndentedVisitor methodsFor: 'abstract - output' stamp: 'PhilippeQuesnel 3/7/2014 11:51'!outputFile: name	self subclassResponsibility ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DirWalkIndentedVisitor class	instanceVariableNames: ''!!DirWalkIndentedVisitor class commentStamp: '<historical>' prior: 0!!!DirWalkIndentedVisitor class methodsFor: 'instance creation' stamp: 'PhilippeQuesnel 3/7/2014 19:46'!newOn: aStream 	^ self new stream: aStream.! !!DirWalkIndentedVisitor class methodsFor: 'instance creation' stamp: 'PhilippeQuesnel 3/7/2014 19:46'!newOn: aStream 	^ self new stream: aStream.! !DirWalkIndentedVisitor subclass: #DirWalkPrintVisitor	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'DirWalker'!!DirWalkPrintVisitor commentStamp: 'PhilippeQuesnel 3/7/2014 20:24' prior: 0!A DirWalkPrintVisitor prints out the directory structure indented on a stream!!DirWalkPrintVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:33'!outputDirOut: name! !!DirWalkPrintVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:31'!outputDirIn: name	stream		nextPutAll: '+' , name , '/';		cr! !!DirWalkPrintVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 12:27'!outputFile: name	stream		nextPutAll: name;		cr! !!DirWalkPrintVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:33'!outputDirOut: name! !!DirWalkPrintVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:31'!outputDirIn: name	stream		nextPutAll: '+' , name , '/';		cr! !!DirWalkPrintVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 12:27'!outputFile: name	stream		nextPutAll: name;		cr! !DirWalkIndentedVisitor subclass: #DirWalkXmlVisitor	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'DirWalker'!!DirWalkXmlVisitor commentStamp: 'PhilippeQuesnel 3/7/2014 20:25' prior: 0!A DirWalkPrintVisitor prints out the directory structure indented as XML on a stream!!DirWalkXmlVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:38'!outputFile: name	stream		nextPutAll: '<file>', name, '</file>';		cr! !!DirWalkXmlVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:31'!outputDirIn: name	stream		nextPutAll: '<dir name="' , name , '">';		cr! !!DirWalkXmlVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:35'!outputDirOut: name	stream		nextPutAll: '</dir>';		cr! !!DirWalkXmlVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:38'!outputFile: name	stream		nextPutAll: '<file>', name, '</file>';		cr! !!DirWalkXmlVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:31'!outputDirIn: name	stream		nextPutAll: '<dir name="' , name , '">';		cr! !!DirWalkXmlVisitor methodsFor: 'output implementation' stamp: 'PhilippeQuesnel 3/7/2014 20:35'!outputDirOut: name	stream		nextPutAll: '</dir>';		cr! !